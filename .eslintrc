{
  "env": {
    "node": true,
    "es6": true,
    "mocha": true
  },
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 8,
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    // 语法规则

    // 	for循环 需要往正确的方向循环,避免死循环
    "for-direction": 2,
    // 禁止循环中有 await
    "no-await-in-loop": 0,
    // 禁止和 -0 比较
    "no-compare-neg-zero": 2,
    // 禁止在条件表达式使用赋值
    "no-cond-assign": 2,
    // 	禁止使用console
    "no-console": 0,
    // 	禁止在条件中使用常量表达式
    "no-constant-condition": 2,
    // 禁止在正则表达式中使用控制字符
    "no-control-regex": 2,
    // 禁用 debugger
    "no-debugger": 2,
    // 禁止在函数定义中传入重复的参数
    "no-dupe-args": 2,
    // 禁止在对象字面量中使用重复的key
    "no-dupe-keys": 2,
    // 禁止在case中出现重复的标签
    "no-duplicate-case": 2,
    // 禁止出现空语句块
    "no-empty": 2,
    // 禁止在正则表达式中使用空字符集
    "no-empty-character-class": 2,
    // 禁止对 catch 子句的参数重新赋值
    "no-ex-assign": 2,
    // 禁止不必要的布尔转换
    "no-extra-boolean-cast": 2,
    // 禁止不必要的括号
    "no-extra-parens": 2,
    // 禁止不必要的分号
    "no-extra-semi": 2,
    // 禁止对 function 声明重新赋值
    "no-func-assign": 2,
    // 禁止在嵌套的块中出现变量声明或 function 声明
    "no-inner-declarations": 2,
    // 禁止 RegExp 构造函数中存在无效的正则表达式字符串
    "no-invalid-regexp": 2,
    // 禁止在字符串和注释之外不规则的空白
    "no-irregular-whitespace": 2,
    // 禁止把全局对象作为函数调用
    "no-obj-calls": 2,
    // 禁止直接调用 Object.prototypes 的内置属性
    "no-prototype-builtins": 2,
    // 禁止正则表达式字面量中出现多个空格
    "no-regex-spaces": 2,
    // 禁用稀疏数组
    "no-sparse-arrays": 2,
    // 禁止错误的模板字符串使用方法
    "no-template-curly-in-string": 2,
    // 禁止使用令人困惑的多行表达式
    "no-unexpected-multiline": 2,
    // 禁止在return、throw、continue 和 break 语句之后出现不可达代码
    "no-unreachable": 2,
    // 禁止在 finally 语句块中出现控制流语句
    "no-unsafe-finally": 2,
    // 禁止不正确的左侧操作符
    "no-unsafe-negation": 2,
    // 要求使用 isNaN() 检查 NaN
    "use-isnan": 2,
    // 强制使用有效的 JSDoc 注释
    "valid-jsdoc": 0,
    // 强制 typeof 表达式与有效的字符串进行比较
    "valid-typeof": 2,

    // 最佳实践

    // 强制 getter 和 setter 在对象中成对出现
    "accessor-pairs": 2,
    // 强制数组方法的回调函数中有 return 语句
    "array-callback-return": 2,
    // 强制把变量的使用限制在其定义的作用域范围内
    "block-scoped-var": 2,
    // 	强制该类方法利用 this
    "class-methods-use-this": 0,
    // 强制设置一个圈复杂度的最大值
    "complexity": [2, 10],
    // 要求 return 语句要么总是指定返回的值，要么不指定
    "consistent-return": 0,
    // 强制所有控制语句使用一致的括号风格
    "curly": [2, "all"],
    // 要求 switch 语句中有 default 分支
    "default-case": 2,
    // 强制在点号之前或之后换行, 达式中的点号操作符应该和对象部分在同一行
    "dot-location": [2, "object"],
    // 要求使用点号访问属性
    "dot-notation": 2,
    // 要求使用 === 和 !==
    "eqeqeq": 2,
    // 需要约束 for-in
    "guard-for-in": 0,
    // 禁止 alert、confirm 和 prompt
    "no-alert": 2,
    // 禁止 arguments.caller 或 arguments.callee
    "no-caller": 1,
    // 禁止在 case 或 default 子句中出现词法声明，为了保证词法声明语句只在当前 case 语句中有效，将你子句包裹在块中
    "no-case-declarations": 2,
    // 禁止使用看起来像除法的正则表达式
    "no-div-regex": 2,
    // 禁止在 else 前有 return
    "no-else-return": 2,
    // 禁止出现空函数
    "no-empty-function": 2,
    // 禁止使用空解构模式
    "no-empty-pattern": 2,
    // 禁止在没有类型检查操作符的情况下与 null 进行比较
    "no-eq-null": 2,
    // 禁用 eval()
    "no-eval": 2,
    // 禁止扩展原生类型
    "no-extend-native": 1,
    // 禁止不必要的函数绑定
    "no-extra-bind": 2,
    // 禁用不必要的标签
    "no-extra-label": 2,
    // 禁止 case 语句落空
    "no-fallthrough": 2,
    // 禁止数字字面量中使用前导和末尾小数点
    "no-floating-decimal": 2,
    // 禁止重写原生对象或只读的全局变量
    "no-global-assign": 2,
    // 禁止使用较短的符号实现类型转换
    "no-implicit-coercion": 2,
    // 禁止在全局范围使用变量和函数声明
    "no-implicit-globals": 0,
    // 禁止隐式的eval()
    "no-implied-eval": 2,
    // 禁止 this 关键字在类或类对象之外出现
    "no-invalid-this": 1,
    // 禁止迭代器
    "no-iterator": 2,
    // 禁止标签语句
    "no-labels": 2,
    // 禁止不必要的嵌套块
    "no-lone-blocks": 2,
    // 禁止在循环中出现 function 声明和表达式
    "no-loop-func": 2,
    // 禁止使用魔术数字 魔术数字是在代码中多次出现的没有明确含义的数字。它最好由命名常量取代
    "no-magic-numbers": 0,
    // 禁止出现多个空格
    "no-multi-spaces": 2,
    // 禁止多行字符串
    "no-multi-str": 2,
    // 禁止在非赋值或条件语句中使用 new 操作符
    "no-new": 2,
    // 禁止对 Function 对象使用 new 操作符
    "no-new-func": 2,
    // 禁止对 String，Number 和 Boolean 使用 new 操作符
    "no-new-wrappers": 2,
    // 禁用八进制字面量
    "no-octal": 2,
    // 禁止在字符串中使用八进制转义序列
    "no-octal-escape": 2,
    // 禁止对 function 的参数进行重新赋值
    "no-param-reassign": 2,
    // 禁用 __proto__ 属性
    "no-proto": 1,
    // 禁止多次声明同一变量
    "no-redeclare": 2,
    // 禁止在一些特定的对象上的特定属性
    "no-restricted-properties": 2,
    // 禁止在 return 语句中使用赋值语句
    "no-return-assign": 2,
    // 禁止非必要的return await
    "no-return-await": 2,
    // 	禁止使用javascript:void(0)
    "no-script-url": 2,
    // 禁止自我赋值
    "no-self-assign": 0,
    // 禁止比较自身
    "no-self-compare": 2,
    // 禁止使用逗号操作符
    "no-sequences": 2,
    // 禁止抛出字面量错误 throw "error";
    "no-throw-literal": 2,
    // 禁止不变的循环条件
    "no-unmodified-loop-condition": 2,
    // 禁止无用的表达式
    "no-unused-expressions": 2,
    // 禁用未使用过的标签
    "no-unused-labels": 2,
    // 禁止不必要的call和apply
    "no-useless-call": 2,
    // 禁止不必要的字符拼接
    "no-useless-concat": 2,
    // 禁止不必要的转义字符
    "no-useless-escape": 2,
    // 禁止多余的return语句
    "no-useless-return": 2,
    // 禁止使用void
    "no-void": 2,
    // 禁用警告注释
    "no-warning-comments": 0,
    // 禁用 with 语句
    "no-with": 2,
    // 	使用error对象作为Promise驳回原因
    "prefer-promise-reject-errors": 2,
    // parseInt必须指定第二个参数
    "radix": [2, "as-needed"],
    // 禁止async中无await表达式
    "require-await": 2,
    // 要求所有的 var 声明出现在它们所在的作用域顶部
    "vars-on-top": 2,
    // 需要把立即执行的函数包裹起来 强制总是包裹 function 表达式
    "wrap-iife": [2, "inside"],
    // 要求或者禁止Yoda条件 默认禁止
    "yoda": 2,

    // 严格模式相关
    "strict": 0,

    // 变量声明相关
    // 强制或禁止变量声明语句中初始化
    "init-declarations": [2, "always"],
    // 禁止 catch 子句的参数与外层作用域中的变量同名
    "no-catch-shadow": 2,
    // 禁止删除变量
    "no-delete-var": 2,
    // 禁用与变量同名的标签
    "no-label-var": 2,
    // 禁用特定的全局变量
    "no-restricted-globals": [2, "event"],
    // 禁止变量声明覆盖外层作用域的变量 builtinGlobals 是 true，会检测内置对象如 Object，Array、Number 等等
    "no-shadow": [1, { "builtinGlobals": true, "hoist": "functions", "allow": [] }],
    // 关键字不能被重定义
    "no-shadow-restricted-names": 2,
    // 禁用未声明的变量 typeof 设置为 true，将对 typeof 中用到的变量发出警告（默认为false）
    "no-undef": [1, { "typeof": true }],
    // 不允许初始化变量值为 undefined
    "no-undef-init": 2,
    // 禁止将 undefined 作为标识符
    "no-undefined": 2,
    // 禁止出现未使用过的变量
    "no-unused-vars": 1,
    // 禁止在变量定义之前使用它们
    "no-use-before-define": 2,

    // 关于Node.js 或 在浏览器中使用CommonJS

    // 强制返回callback函数
    "callback-return": 0,
    // 要求 require() 出现在顶层模块作用域中
    "global-require": 2,
    // 强制回调错误处理
    "handle-callback-err": 0,
    // 禁止采用new 实例化Buffer对象
    "no-buffer-constructor": 2,
    // 禁止混合常规变量声明和 require 调用
    "no-mixed-requires": 2,
    // 禁止调用 require 时使用 new 操作符
    "no-new-require": 2,
    // 禁止对 __dirname 和 __filename 进行字符串连接
    "no-path-concat": 2,
    // 禁用 process.env
    "no-process-env": 0,
    // 禁用 process.exit()
    "no-process-exit": 2,
    // 禁用 Node.js 模块
    "no-restricted-modules": 0,
    // 禁止使用同步方法
    "no-sync": 1,

    // 代码风格

    // 数组开始和结尾是否强制换行
    "array-bracket-newline": [0, "never"],
    // 指定数组的元素之间要以空格隔开(, 后面)， never参数：[ 之前和 ] 之后不能带空格 always参数：要求在数组括号内使用一个或多个空格、或折行
    "array-bracket-spacing": [2, "always"],
    // 是否要求数组元素之间换行 never: 不允许换行
    "array-element-newline": [0, "never"],
    // 禁止或强制在单行代码块中使用空格 always：强制使用空格 never：禁止空格
    "block-spacing": [2, "always"],
    // 大括号风格 if while function 后面的{必须与if在同一行，java风格
    "brace-style": [2, "1tbs", { "allowSingleLine": false }],
    // 强制使用骆驼拼写法命名约定
    "camelcase": 0,
    // 强制或禁止注释的首字母大写
    "capitalized-comments": 0,
    // 要求或禁止使用拖尾逗号 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号
    "comma-dangle": [2, "never"],
    // 控制逗号前后的空格
    "comma-spacing": [2, {
      "before": false,
      "after": true
    }],
    // 强制使用一致的逗号风格 last(默认):要求逗号放在数组元素、对象属性或变量声明之后，且在同一行 first:要求逗号放在数组元素、对象属性或变量声明之前，且在同一行
    "comma-style": [2, "last"],
    // 禁止或强制在计算属性中使用空格
    "computed-property-spacing": [2, "never"],
    // 要求一致的 This this 有多个常用的别名，例如 self、that 或 me 。在整个项目中确保团队成员使用同样的别名是一个很有必要的事情。
    "consistent-this": [2, "that"],
    // 要求或禁止文件末尾保留一行空行 always(默认)：强制使用换行 (LF)
    "eol-last": [2, "always"],
    // 要求或禁止函数调用时 () 与函数名之间有空格 never: 不允许有空格 always：必须有空格
    "func-call-spacing": [2, "never"],
    // 要求函数名与其参数或属性相似
    "func-name-matching": 0,
    // 要求或禁止使用命名的 function 表达式
    "func-names": [2, "never"],
    // 强制一致地使用函数声明或函数表达式，方法定义风格，参数：
    // declaration: 强制使用方法声明的方式，function f(){} e.g [2, "declaration"]
    // expression：强制使用方法表达式的方式，var f = function() {} e.g [2, "expression"]
    // allowArrowFunctions: declaration风格中允许箭头函数。 e.g [2, "declaration", { "allowArrowFunctions": true }]
    "func-style": [2, "expression", {"allowArrowFunctions": true}],
    // 禁止使用指定的标识符
    "id-blacklist": 0,
    // 强制变量名的最大和最小长度
    "id-length": [2, {"min": 1, "max": 25}],
    // 要求变量名匹配特定的正则表达式
    "id-match": 0,
    // 强制使用一致的缩进
    "indent": [2, 2],
    // 强制在 JSX 属性中使用一致的单引号或双引号
    "jsx-quotes": 0,
    // 强制在对象字面量中冒号的前后空格使用一致的间距
    "key-spacing": [2, {"beforeColon": false, "afterColon": true}],
    // 强制关键字前后空格的风格
    "keyword-spacing": [2, {"before": true, "after": true}],
    // 强制注释风格
    "lines-around-comment": [2, {
      "beforeBlockComment": true, "afterBlockComment": false, "beforeLineComment": true,
      "allowBlockStart": true, "allowBlockEnd": false, "allowObjectStart": true, "allowObjectEnd": false,
      "allowArrayStart": false, "allowArrayEnd": false
    }],
    // 强制块语句的最大可嵌套深度
    "max-depth": [2, 4],
    // 强制一行的最大长度
    "max-len": [2, 150],
    // 强制最大行数
    "max-lines": [2, 800],
    // 强制回调函数最大嵌套深度
    "max-nested-callbacks": [2, 4],
    // 强制函数定义中最多允许的参数数量
    "max-params": [0, 5],
    // 强制代码块最多允许的的语句数量
    "max-statements": 0,
    // 强制每一行中所允许的最大语句数量
    "max-statements-per-line": [0, {"max": 1}],
    // 强制或禁止三元表达式的操作数之间的换行
    "multiline-ternary": 0,
    // 要求构造函数首字母大写
    "new-cap": 2,
    // 要求调用无参构造函数时带括号
    "new-parens": 2,
    // 要求方法链中每个调用都有一个换行符 ignoreChainWithDepth(默认为 2)：允许在同一行成链的深度
    "newline-per-chained-call": [2, {"ignoreChainWithDepth": 3 }],
    // 禁止使用 Array 构造函数
    "no-array-constructor": 2,
    // 禁用按位运算符
    "no-bitwise": 2,
    // 禁用 continue 语句
    "no-continue": 2,
    // 禁止行内注释
    "no-inline-comments": 2,
    // 禁止 if 语句作为唯一语句出现在 else 语句块中
    "no-lonely-if": 0,
    // 禁止混合使用不同的操作符 groups：指定要比较的操作符分组 当该规则比较两个操作符时，如果操作符在同一分组内，
    // 该规则会进行检查。否则这规则忽略它。它值是个列表组。这个组是二元操作符列表。默认为各种操作符的组。
    // allowSamePrecedence：指定允许使用混合的两个操作符，前提是它们有同样的优先级。 默认为 true.
    "no-mixed-operators": [2, {
      "groups": [
        ["+", "-", "*", "/", "%", "**"],
        ["&", "|", "^", "~", "<<", ">>", ">>>"],
        ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
        ["&&", "||"],
        ["in", "instanceof"]
      ],
      "allowSamePrecedence": true
    }],
    // 禁止使用 空格 和 tab 混合缩进
    "no-mixed-spaces-and-tabs": 2,
    // 禁止使用链式赋值语句
    "no-multi-assign": 2,
    // 禁止出现多行空行 max(默认为 2)：强制最大连续空行数。
    "no-multiple-empty-lines": [2, {"max": 1}],
    // 禁用否定表达式 禁止在以下情况使用否定表达式：含有 else 分支的 if 语句、三元表达式
    "no-negated-condition": 2,
    // 禁止使用嵌套的三元表达式
    "no-nested-ternary": 1,
    // 禁止使用 Object 构造函数
    "no-new-object": 2,
    // 禁止使用特定的语法
    "no-restricted-syntax": 0,
    // 禁止使用制表符
    "no-tabs": 2,
    // 禁止使用三元操作符
    "no-ternary": 0,
    // 禁用行尾空格
    "no-trailing-spaces": 0,
    // 禁止变量名中有悬空下划线 "allow" 允许指定标识符使用悬空下划线 allowAfterThis: false (默认) 禁止在 this 对象的成员变量上使用悬空下划线
    // allowAfterSuper: false (默认) 禁止在 super 对象的成员变量上使用悬空下划线
    "no-underscore-dangle": [1, {"allowAfterThis": true }],
    // 禁止可以表达为更简单结构的三元操作符
    "no-unneeded-ternary": 0,
    // 禁止属性前有空白
    "no-whitespace-before-property": 2,
    // 强制单行语句的位置
    "nonblock-statement-body-position": 2,
    // 强制在花括号内使用一致的换行
    "object-curly-newline": 0,
    // 强制在大括号中使用一致的空格 never(默认)：不允许花括号中有空格 always：要求花括号内有空格 (除了 {})
    "object-curly-spacing": 0,
    // 强制将对象的属性放在不同的行上
    "object-property-newline": 0,
    // 强制函数中的变量在一起声明或分开声明 always(默认)：要求每个作用域有一个变量声明 never：要求每个作用域有多个变量声明
    "one-var": [2, "never"],
    // 要求或禁止在变量声明周围换行 initializations(默认)：强制每个变量初始化语句换行 always：强制每个变量声明都换行
    "one-var-declaration-per-line": [2, "always"],
    // 要求或禁止尽可能地简化赋值操作
    "operator-assignment": [2, "always"],
    // 强制操作符使用一致的换行符风格 after：要求把换行符放在操作符后面 before：要求把换行符放在操作符前面 none：禁止在操作前后有换行符
    "operator-linebreak": [2, "before"],
    // 要求或禁止块内填充 always(默认)：要求块语句和类的开始或末尾有空行 never：禁止块语句和类的开始或末尾有空行
    "padded-blocks": [2, "never"],
    // 强制或要求语句之间是否有填充行
    "padding-line-between-statements": 0,
    // 要求对象字面量属性名称使用引号 consistent-as-needed：如果有属性名称要求使用引号，则所有的属性名称都要使用引号；否则，禁止所有的属性名称使用引号
    "quote-props": [1, "consistent-as-needed"],
    // 强制使用一致的反勾号、双引号或单引号 double(默认)：要求尽可能地使用双引号 single：要求尽可能地使用单引号 backtick：要求尽可能地使用反勾号
    "quotes": [1, "single"],
    // 要求使用 JSDoc 注释
    "require-jsdoc": 0,
    // 要求或禁止使用分号代替 ASI
    "semi": [2, "always"],
    // 强制分号之前和之后使用一致的空格
    "semi-spacing": [2, {"before": false, "after": false}],
    // 强制分号的位置 last：在最后 first：在最前
    "semi-style": [2, "last"],
    // 要求对象的键排序
    "sort-keys": 0,
    // 要求同一个声明块中的变量按顺序排列
    "sort-vars": 0,
    // 要求或禁止语句块之前的空格
    "space-before-blocks": [2, "always"],
    // 要求或禁止函数圆括号之前有一个空格
    "space-before-function-paren": [2, "never"],
    // 禁止或强制圆括号内的空格
    "space-in-parens": [2, "never"],
    // 要求操作符周围有空格
    "space-infix-ops": 2,
    // 要求或禁止在一元操作符之前或之后存在空格
    "space-unary-ops": [2, { "words": true, "nonwords": false }],
    // 要求或禁止在注释前有空白
    "spaced-comment": [2, "always"],
    // 要求switch语句中的冒号前后是否有空格
    "switch-colon-spacing": [2, {"before": false, "after": true}],
    // 要求或禁止变量与模板字符串之间是否存在空格
    "template-tag-spacing": [2, "always"],
    // 要求或禁止使用 Unicode 字节顺序标记
    "unicode-bom": 0,
    // 要求正则表达式被包裹起来
    "wrap-regex": 2,


    // ES6相关

    // 要求箭头函数体使用大括号
    "arrow-body-style": [2, "always"],
    // 要求箭头函数的参数使用圆括号
    "arrow-parens": 2,
    // 要求箭头函数的箭头之前或之后有空格
    "arrow-spacing":  [2, { "before": true, "after": true }],
    // 强制在子类构造函数中用super()调用父类构造函数，TypeScrip的编译器也会提示
    "constructor-super": 2,
    // 强制 generator 函数中 * 号周围有空格
    "generator-star-spacing": ["error", {"before": true, "after": false}],
    // 不允许修改类声明的变量
    "no-class-assign": 2,
    // 禁止箭头函数与比较操作符混用
    "no-confusing-arrow": 2,
    // 禁止修改 const 声明的变量
    "no-const-assign": 2,
    // 禁止类成员中出现重复的名称
    "no-dupe-class-members": 2,
    // 禁止多次引入一个模块中的内容
    "no-duplicate-imports": 2,
    // 禁止使用Symbol构造函数
    "no-new-symbol": 2,
    // 禁止通过import加载指定的模块
    "no-restricted-imports": [2],
    // 在构造函数中禁止在调用super()之前使用this或super
    "no-this-before-super": 2,
    // 	禁止对象中存在不必要的计算属性键
    "no-useless-computed-key": 2,
    // 禁止不必要的构造函数
    "no-useless-constructor": 2,
    // 禁止 import、export、解构中不必要的重命名
    "no-useless-rename": 2,
    // 要求或禁止对象键的方法和属性简写
    "object-shorthand": [0, "never"],
    // 要求使用 let 或 const 而不是 var
    "no-var": 2,
    // 推荐使用箭头函数作为回调
    "prefer-arrow-callback": 0,
    // 要求使用 const 声明那些声明后不再被修改的变量
    "prefer-const": 1,
    // 要求从数组或对象中使用解构
    "prefer-destructuring": 0,
    // 禁止parseInt()支持二进制，八进制和十六进制
    "prefer-numeric-literals": 1,
    // 要求reset参数替换arguments
    "prefer-rest-params": 2,
    // 要求使用扩展运算符而非.apply()
    "prefer-spread": 2,
    // 要求使用模板字符串而非字符串连接
    "prefer-template": 0,
    // 要求 generator 函数内有 yield
    "require-yield": 2,
    // 要求解构操作符与变量的空格
    "rest-spread-spacing": [2, "never"],
    // 要求import时排序
    "sort-imports": 0,
    // 要求Symbol说明
    "symbol-description": 2,
    // 要求或禁止模板字符串的嵌入式表达式周围有空格
    "template-curly-spacing": [2, "never"],
    // 要求或禁止的yield *中的空格
    "yield-star-spacing": ["error", "before"]
  }
}
